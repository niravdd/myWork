{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description" : "AWS template to deploy data generator",

    "Parameters" : {

        "KeyName": {
            "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription" : "Can contain only ASCII characters."
        },

        "S3BucketName": {
            "Description" : "Name of an existing S3 Bucket",
            "Type": "String",
            "ConstraintDescription" : "Name of existing S3 Bucket (code will be taken from there)",
            "Default" : "kinesis-datagen"
        },

        "InstanceType" : {
            "Description" : "WebServer EC2 instance type",
            "Type" : "String",
            "Default" : "m1.small",
            "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
            "ConstraintDescription" : "Must be a valid EC2 instance type"
        },
        "SSHLocation" : {
            "Description" : "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
        }
    },

    "Mappings" : {
        "AWSInstanceType2Arch" : {
            "t1.micro"    : { "Arch" : "PV64"   },
            "t2.micro"    : { "Arch" : "HVM64"  },
            "t2.small"    : { "Arch" : "HVM64"  },
            "t2.medium"   : { "Arch" : "HVM64"  },
            "m1.small"    : { "Arch" : "PV64"   },
            "m1.medium"   : { "Arch" : "PV64"   },
            "m1.large"    : { "Arch" : "PV64"   },
            "m1.xlarge"   : { "Arch" : "PV64"   },
            "m2.xlarge"   : { "Arch" : "PV64"   },
            "m2.2xlarge"  : { "Arch" : "PV64"   },
            "m2.4xlarge"  : { "Arch" : "PV64"   },
            "m3.medium"   : { "Arch" : "HVM64"  },
            "m3.large"    : { "Arch" : "HVM64"  },
            "m3.xlarge"   : { "Arch" : "HVM64"  },
            "m3.2xlarge"  : { "Arch" : "HVM64"  },
            "c1.medium"   : { "Arch" : "PV64"   },
            "c1.xlarge"   : { "Arch" : "PV64"   },
            "c3.large"    : { "Arch" : "HVM64"  },
            "c3.xlarge"   : { "Arch" : "HVM64"  },
            "c3.2xlarge"  : { "Arch" : "HVM64"  },
            "c3.4xlarge"  : { "Arch" : "HVM64"  },
            "c3.8xlarge"  : { "Arch" : "HVM64"  },
            "g2.2xlarge"  : { "Arch" : "HVMG2"  },
            "r3.large"    : { "Arch" : "HVM64"  },
            "r3.xlarge"   : { "Arch" : "HVM64"  },
            "r3.2xlarge"  : { "Arch" : "HVM64"  },
            "r3.4xlarge"  : { "Arch" : "HVM64"  },
            "r3.8xlarge"  : { "Arch" : "HVM64"  },
            "i2.xlarge"   : { "Arch" : "HVM64"  },
            "i2.2xlarge"  : { "Arch" : "HVM64"  },
            "i2.4xlarge"  : { "Arch" : "HVM64"  },
            "i2.8xlarge"  : { "Arch" : "HVM64"  },
            "hi1.4xlarge" : { "Arch" : "HVM64"  },
            "hs1.8xlarge" : { "Arch" : "HVM64"  },
            "cr1.8xlarge" : { "Arch" : "HVM64"  },
            "cc2.8xlarge" : { "Arch" : "HVM64"  }
        },

        "AWSRegionArch2AMI" : {
            "us-east-1"      : { "PV64" : "ami-50842d38", "HVM64" : "ami-08842d60", "HVMG2" : "ami-3a329952"  },
            "us-west-2"      : { "PV64" : "ami-af86c69f", "HVM64" : "ami-8786c6b7", "HVMG2" : "ami-47296a77"  },
            "us-west-1"      : { "PV64" : "ami-c7a8a182", "HVM64" : "ami-cfa8a18a", "HVMG2" : "ami-331b1376"  },
            "eu-west-1"      : { "PV64" : "ami-aa8f28dd", "HVM64" : "ami-748e2903", "HVMG2" : "ami-00913777"  },
            "ap-southeast-1" : { "PV64" : "ami-20e1c572", "HVM64" : "ami-d6e1c584", "HVMG2" : "ami-fabe9aa8"  },
            "ap-northeast-1" : { "PV64" : "ami-21072820", "HVM64" : "ami-35072834", "HVMG2" : "ami-5dd1ff5c"  },
            "ap-southeast-2" : { "PV64" : "ami-8b4724b1", "HVM64" : "ami-fd4724c7", "HVMG2" : "ami-e98ae9d3"  },
            "sa-east-1"      : { "PV64" : "ami-9d6cc680", "HVM64" : "ami-956cc688", "HVMG2" : "NOT_SUPPORTED" },
            "cn-north-1"     : { "PV64" : "ami-a857c591", "HVM64" : "ami-ac57c595", "HVMG2" : "NOT_SUPPORTED" },
            "eu-central-1"   : { "PV64" : "ami-a03503bd", "HVM64" : "ami-b43503a9", "HVMG2" : "ami-b03503ad"  }
        }
    },

    "Resources" : {
        "datagenRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonKinesisFullAccess",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                ]
            }
        },
        "datagenRoleProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ {
                    "Ref": "datagenRole"
                } ]
            }
        },
        "WebServerInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "InstallAndRun" : [ "Install" ]
                    },

                    "Install" : {
                        "packages" : {
                            "yum" : {
                                "php71.x86_64"          : []
                            }
                        },

                        "files" : {

                            "/etc/cfn/cfn-hup.conf" : {
                                "content" : { "Fn::Join" : ["", [
                                    "[main]\n",
                                    "stack=", { "Ref" : "AWS::StackId" }, "\n",
                                    "region=", { "Ref" : "AWS::Region" }, "\n"
                                ]]},
                                "mode"    : "000400",
                                "owner"   : "root",
                                "group"   : "root"
                            },

                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                                "content": { "Fn::Join" : ["", [
                                    "[cfn-auto-reloader-hook]\n",
                                    "triggers=post.update\n",
                                    "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                                    "action=/opt/aws/bin/cfn-init -v ",
                                    "         --stack ", { "Ref" : "AWS::StackName" },
                                    "         --resource WebServerInstance ",
                                    "         --configsets InstallAndRun ",
                                    "         --region ", { "Ref" : "AWS::Region" }, "\n",
                                    "runas=root\n"
                                ]]}
                            }
                        },

                        "services" : {
                            "sysvinit" : {
                                "httpd"   : { "enabled" : "true", "ensureRunning" : "true" },
                                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                                    "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
                            }
                        },

                        "commands" : {
                            "download": { "command":
                                { "Fn::Join" : ["", [
                                            "aws s3 cp s3://",
                                            { "Ref" : "S3BucketName" },
                                            "/kinesis-datagen.tar /var/www/html/kinesis-datagen.tar\n",
                                        ]
                                    ]
                                }
                            },

                            "extract": { "command": "cd /var/www/html/; tar -xvf kinesis-datagen.tar\n" },
                            "restart" : { "command": "sudo service httpd restart\n" }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": { "Ref" : "datagenRoleProfile" },
                "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                    { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
                    "InstanceType"   : { "Ref" : "InstanceType" },
                    "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
                    "KeyName"        : { "Ref" : "KeyName" },
                    "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
                        "#!/bin/bash -xe\n",
                        "yum install -y aws-cfn-bootstrap\n",
                        "# Install the files and packages from the metadata\n",
                        "/opt/aws/bin/cfn-init -v ",
                        "         --stack ", { "Ref" : "AWS::StackName" },
                        "         --resource WebServerInstance ",
                        "         --configsets InstallAndRun ",
                        "         --region ", { "Ref" : "AWS::Region" }, "\n",
                        "/opt/aws/bin/cfn-signal -e $? ",
                        "         --stack ", { "Ref" : "AWS::StackName" },
                        "         --resource WebServerInstance ",
                        "         --region ", { "Ref" : "AWS::Region" }, "\n"
                    ]]}}
            },
            "CreationPolicy" : {
                "ResourceSignal" : {
                    "Timeout" : "PT5M"
                }
            }
        },

        "WebServerSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable HTTP access via port 80",
                "SecurityGroupIngress" : [
                    {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
                    {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
                ]
            }
        }
    },

    "Outputs" : {
        "WebsiteURL" : {
            "Description" : "URL for newly created LAMP stack",
            "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServerInstance", "PublicDnsName" ]}, "/kinesis-datagen/"]] }
        }
    }
}
