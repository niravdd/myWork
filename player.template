{
    "playerip": "{{internet.ip}}",
    "handle": "{{internet.userName}}",
    "email": "{{internet.email}}",
    "uuid": "{{random.uuid}}",
    "playerid": {{random.number(
        {
            "min":1000000000,
            "max":1000000999
        }
    )}},
    "country": "{{random.weightedArrayElement(
        {
            "weights": [ 0.25, 0.20, 0.08, 0.10, 0.02, 0.15, 0.05, 0.03, 0.02, 0.03, 0.04, 0.03 ],
            "data": [ "US", "Japan", "Singapore", "Australia", "New Zealand", "Canada", "UK", "Malaysia", "Russia", "India", "Philippines", "Taiwan" ]
        }
    )}}",
    "useragent": "{{random.weightedArrayElement(
        {
            "weights": [ 0.20, 0.26, 0.04, 0.06, 0.06, 0.03, 0.35 ],
            "data": [ "Mozilla Firefox", "Chrome", "Brave", "Safari", "Opera", "Internet Explorer", "Unknown" ]
        }
    )}}",
    "datestamp": "{{date.now(YYYY-MM-DD HH:mm:ssZ)}}",
    "walletbalance": {{finance.amount}},
    "playerlevel": "{{random.weightedArrayElement(
        {
            "weights": [ 0.05,0.10,0.12,0.05,0.03,0.07,0.13,0.3,0.15 ],
            "data": [ "Level 1", "Level 2", "Level 3", "Level 4", "Level 5", "Level 6", "Level 7", "Level 8", "Level 9" ]
        }
    )}}",
    "status": "{{random.weightedArrayElement(
        {
            "weights": [ 0.91, 0.002, 0.088 ],
            "data": [ "Player","DevTest","Blacklisted" ]
        }
    )}}"
}


#!/bin/bash
/home/ec2-user/efs-userdata-mount.sh fs-8c2acab5 /mnt/efs


============= Redshift Queries
create table eval01table (playerip varchar(16), handle varchar(40), email varchar(128), uuid varchar(64), playerid bigint, country varchar(64), useragent varchar(128), datestamp timestamptz, walletbalance real, playerlevel varchar(16), status varchar(16));
select * from eval01table limit 500;
select count(*) from eval01table;
select count(distinct handle) from eval01table;
select count(distinct email) from eval01table;
select count(distinct playerip) from eval01table;
select count(distinct playerid) from eval01table;
select count(distinct playerlevel) from eval01table;
select count(*) from eval01table group by country;
######
select playerid, country, email, walletbalance from eval01table order by walletbalance desc limit 20;
select playerid, country, email, walletbalance from eval01table limit 100;
select playerid, country, email, walletbalance as wallet, COUNT( CASE WHEN walletbalance > 1000 THEN walletbalance ELSE NULL END) as weirdbalance from eval01table group by playerid, country, email, walletbalance limit 100;
###########
Try to build SQL Statements which can show:
1. Player accounts created in the last 15 minutes
-- Details of the last 10 games within the last 15 minutes
select
  *
from
  workshoptelemetrydb.telemetry12017
where
  cast(datestamp as timestamp) > current_timestamp - INTERVAL '15' MINUTE
limit 10;
2. Player accounts from a particular country
-- Details of the 10 most recent player registrations from Japan
select
  *
from
  workshoptelemetrydb.analytics12017
where
  country = 'Japan'
order by
  datestamp desc
limit 10;
3. Player accounts who have wallet balance > 1000 and are not at level x yet
-- Show details of players who have a walletbalance > 1000 and are level 3-5 (Redshift)
select
  playerlevel, substring(playerlevel,7,1)
from
  analytics1
where
  walletbalance > 1000 and
  cast(substring(playerlevel,7,1) as int) < 3
limit 10;

-- Show details of players who have a walletbalance > 1000 and are level 3-5 (Athena)
select
  playerlevel
from
  workshoptelemetrydb.analytics12017
where
  walletbalance > 1000 and
  playerlevel in ('Level 3', 'Level 4', 'Level 5')
limit 10;
4. Player accounts who have wallet balance < 100
    select playerid, country, email, walletbalance from eval01table where walletbalance < 100 limit 100;
    select playerid, country, email, walletbalance from eval01table where walletbalance < 100 order by walletbalance limit 100;
    select playerid, country, email, walletbalance from eval01table where walletbalance > 0 and walletbalance < 100 order by walletbalance limit 100;
5. Player accounts who use Firefox and from Japan
    select playerid, email, playerlevel, walletbalance, useragent from eval01table where country = 'Japan' and useragent like '%Firefox%' limit 100;
6. Player accounts from Australia who are playing Level 9
    select playerid, email, playerlevel, walletbalance, useragent from eval01table where country = 'Australia' and playerlevel = 'Level 9' limit 100;
7. Player accounts who are blacklisted in the last 24 hours. Further filter to a particular country. Get a count of blacklisted players from all countries.
-- Show all blacklisted players from India
select
  *
from
  workshoptelemetrydb.analytics12017
where
  country = 'India' and
  status = 'Blacklisted'
order by datestamp desc
limit 10;



delete from eval01table where 1=1;
drop table eval01table;
==============


select country, status, count(*) from eval01table group by country, status order by country;
select playerid, country, status from eval01table group by playerid, country, status order by country;
select count(playerid), playerid, country from eval01table group by playerid, country;
select count(playerid), playerid, country, status from eval01table group by playerid, country, status order by country;
select count(playerid), playerid, country from eval01table group by playerid, country order by country, playerid;

==============
Athena:

CREATE EXTERNAL TABLE IF NOT EXISTS evaldatabase.eval01table (
  `playerip` string,
  `handle` string,
  `email` string,
  `uuid` string,
  `playerid` bigint,
  `country` string,
  `useragent` string,
  `datestamp` string,
  `walletbalance` double,
  `playerlevel` string,
  `status` string 
)
ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe'
WITH SERDEPROPERTIES (
  'serialization.format' = '1'
) LOCATION 's3://kinesis-bot-datagen/eval01table2017/'
TBLPROPERTIES ('has_encrypted_data'='false');


----------------- Doesn't work ----------------
CREATE EXTERNAL TABLE IF NOT EXISTS evaldatabase.eval01table (
  `playerip` string,
  `handle` string,
  `email` string,
  `uuid` string,
  `playerid` bigint,
  `country` string,
  `useragent` string,
  `datestamp` timestamp,
  `walletbalance` double,
  `playerlevel` string,
  `status` string 
)
ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe'
WITH SERDEPROPERTIES (
  'serialization.format' = '1',
  "timestamp.formats" = "yyyy-MM-dd HH:mm:ss+TZ"
) LOCATION 's3://kinesis-bot-datagen/eval01table2017/'
TBLPROPERTIES ('has_encrypted_data'='false');
------------------------------------------------