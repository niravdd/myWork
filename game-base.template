{
    "datestamp": "{{date.now(YYYY-MM-DD HH:mm:ssZ)}}",
    "playerid": {{random.number(
        {
            "min":1000000000,
            "max":1000000999
        }
    )}},
    "playerlevel": "{{random.weightedArrayElement(
        {
            "weights": [ 0.05, 0.10, 0.12, 0.05, 0.03, 0.07, 0.13, 0.3, 0.15 ],
            "data": [ "Level 1", "Level 2", "Level 3", "Level 4", "Level 5", "Level 6", "Level 7", "Level 8", "Level 9" ]
        }
    )}}",
    "squadelementmap": "{{random.weightedArrayElement(
        {
            "weights": [ 0.20, 0.30, 0.10, 0.25, 0.15 ],
            "data": [ "Earth", "Water", "Fire", "Air", "Space" ]
        }
    )}}",
    "gamenumber": {{random.number(
        {
            "min":1,
            "max":6
        }
    )}},
    "squadpower": {{random.number(
        {
            "min":4,
            "max":14
        }
    )}},
    "squadagility": {{random.number(
        {
            "min":6,
            "max":16
        }
    )}},
    "squadhealth": {{random.number(
        {
            "min":8,
            "max":12
        }
    )}},
    "squadluck": {{random.number(
        {
            "min":0,
            "max":1
        }
    )}},
    "squadspecial": {{random.number(
        {
            "min":10,
            "max":18
        }
    )}},
    "squadguard": {{random.number(
        {
            "min":10,
            "max":12
        }
    )}},
    "squaddamage": {{random.number(
        {
            "min":10,
            "max":15
        }
    )}},
    "gameplayseconds": {{random.number(
        {
            "min":4,
            "max":6
        }
    )}},
    "bosspower": {{random.number(
        {
            "min":40,
            "max":50
        }
    )}},
    "bossagility": {{random.number(
        {
            "min":40,
            "max":50
        }
    )}},
    "bosshealth": {{random.number(
        {
            "min":40,
            "max":50
        }
    )}},
    "bossluck": {{random.number(
        {
            "min":0,
            "max":1
        }
    )}},
    "bossspecial": {{random.number(
        {
            "min":40,
            "max":50
        }
    )}},
    "bossguard": {{random.number(
        {
            "min":40,
            "max":50
        }
    )}},
    "bossdamage": {{random.number(
        {
            "min":40,
            "max":70
        }
    )}},
    "result": "{{random.weightedArrayElement(
        {
            "weights": [ 0.52, 0.43, 0.05 ],
            "data": [ "Won","Lost","DNF" ]
        }
    )}}"
}


============= Redshift Queries
create table eval02table (datestamp timestamptz, playerid bigint, playerlevel varchar(16), squadelementmap varchar(8), gamenumber int, squadpower int, squadagility int, squadhealth int, squadluck int, squadspecial int, squadguard int, squaddamage int, gameplayseconds int, bosspower int, bossagility int, bosshealth int, bossluck int, bossspecial int, bossguard int, bossdamage int, result varchar(8));
select * from eval02table limit 500;
select count(*) from eval02table;
select count(distinct playerid) from eval02table;

delete from eval02table where 1=1;
drop table eval02table;
==============

select count(playerlevel), playerlevel, result from eval02table group by playerlevel, result order by playerlevel+result;
select count(squadelementmap), squadelementmap from eval02table group by squadelementmap order by squadelementmap;

==============
Athena:

CREATE EXTERNAL TABLE IF NOT EXISTS evaldatabase.eval02table (
  `datestamp` string,
  `playerid` bigint,
  `playerlevel` string,
  `squadelementmap` string,
  `gamenumber` int,
  `squadpower` int,
  `squadagility` int,
  `squadhealth` int,
  `squadluck` int,
  `squadspecial` int,
  `squadguard` int,
  `squaddamage` int,
  `gameplayseconds` int,
  `bosspower` int,
  `bossagility` int,
  `bosshealth` int,
  `bossluck` int,
  `bossspecial` int,
  `bossguard` int,
  `bossdamage` int,
  `result` string 
)
ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe'
WITH SERDEPROPERTIES (
  'serialization.format' = '1'
) LOCATION 's3://kinesis-bot-datagen/eval02table2017/'
TBLPROPERTIES ('has_encrypted_data'='false');
===============

select count(playerid), playerid, result from eval02table group by playerid, result order by result;


=== Kinesis Analytics App Code ===
CREATE OR REPLACE STREAM "DESTINATION_SQL_STREAM" (
    "playerid" bigint, "playerlevel" VARCHAR(16), "squadelementmap" VARCHAR(8), "gamenumber" integer, "squadpower" integer, "squadagility" integer, "squadhealth" integer, "squadluck" integer, "squadspecial" integer,
    "squadguard" integer, "squaddamage" integer, "gameplayseconds" integer, "bosspower" integer, "bossagility" integer, "bosshealth" integer, "bossluck" integer, "bossspecial" integer, "bossguard" integer, "bossdamage" integer, "result" VARCHAR(8));

CREATE OR REPLACE PUMP "STREAM_PUMP" AS INSERT INTO "DESTINATION_SQL_STREAM" 
SELECT STREAM "playerid", "playerlevel", "squadelementmap", "gamenumber", "squadpower", "squadagility", "squadhealth", "squadluck", "squadspecial",
    "squadguard", "squaddamage", "gameplayseconds", "bosspower", "bossagility", "bosshealth", "bossluck", "bossspecial", "bossguard", "bossdamage", "COL_result"
FROM "SOURCE_SQL_STREAM_001" where "gamenumber"=1;
-------------------------------------------------------------------
CREATE OR REPLACE STREAM "WORKSHOP_TELEMETRY2_FIREHOSE_STREAM" (
    "playerid" bigint, "playerlevel" VARCHAR(8), "squadelementmap" VARCHAR(8), "gamenumber" integer, "squadpower" integer, "squadagility" integer, "squadhealth" integer, "squadluck" integer, "squadspecial" integer,
    "squadguard" integer, "squaddamage" integer, "gameplayseconds" integer, "bosspower" integer, "bossagility" integer, "bosshealth" integer, "bossluck" integer, "bossspecial" integer, "bossguard" integer, "bossdamage" integer, "result" VARCHAR(4));

CREATE OR REPLACE PUMP "STREAM_PUMP" AS INSERT INTO "WORKSHOP_TELEMETRY2_FIREHOSE_STREAM" 
SELECT STREAM "playerid", "playerlevel", "squadelementmap", "gamenumber", "squadpower", "squadagility", "squadhealth", "squadluck", "squadspecial",
    "squadguard", "squaddamage", "gameplayseconds", "bosspower", "bossagility", "bosshealth", "bossluck", "bossspecial", "bossguard", "bossdamage", "COL_result"
FROM "SOURCE_SQL_STREAM_001" where "COL_result"='DNF';
-------------------------------------------------------------------
